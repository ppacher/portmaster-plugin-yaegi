// Code generated by 'yaegi extract github.com/safing/portmaster/plugin/shared/proto'. DO NOT EDIT.

package main

import (
	"github.com/safing/portmaster/plugin/shared/proto"
	"reflect"
)

func init() {
	Symbols["github.com/safing/portmaster/plugin/shared/proto/proto"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ConnectionType_CONNECTION_TYPE_DNS":     reflect.ValueOf(proto.ConnectionType_CONNECTION_TYPE_DNS),
		"ConnectionType_CONNECTION_TYPE_IP":      reflect.ValueOf(proto.ConnectionType_CONNECTION_TYPE_IP),
		"ConnectionType_CONNECTION_TYPE_UNKNOWN": reflect.ValueOf(proto.ConnectionType_CONNECTION_TYPE_UNKNOWN),
		"ConnectionType_name":                    reflect.ValueOf(&proto.ConnectionType_name).Elem(),
		"ConnectionType_value":                   reflect.ValueOf(&proto.ConnectionType_value).Elem(),
		"Verdict_VERDICT_ACCEPT":                 reflect.ValueOf(proto.Verdict_VERDICT_ACCEPT),
		"Verdict_VERDICT_BLOCK":                  reflect.ValueOf(proto.Verdict_VERDICT_BLOCK),
		"Verdict_VERDICT_DROP":                   reflect.ValueOf(proto.Verdict_VERDICT_DROP),
		"Verdict_VERDICT_FAILED":                 reflect.ValueOf(proto.Verdict_VERDICT_FAILED),
		"Verdict_VERDICT_REROUTE_TO_NS":          reflect.ValueOf(proto.Verdict_VERDICT_REROUTE_TO_NS),
		"Verdict_VERDICT_REROUTE_TO_TUNNEL":      reflect.ValueOf(proto.Verdict_VERDICT_REROUTE_TO_TUNNEL),
		"Verdict_VERDICT_UNDECIDED":              reflect.ValueOf(proto.Verdict_VERDICT_UNDECIDED),
		"Verdict_VERDICT_UNDETERMINABLE":         reflect.ValueOf(proto.Verdict_VERDICT_UNDETERMINABLE),
		"Verdict_name":                           reflect.ValueOf(&proto.Verdict_name).Elem(),
		"Verdict_value":                          reflect.ValueOf(&proto.Verdict_value).Elem(),

		// type definitions
		"Connection":     reflect.ValueOf((*proto.Connection)(nil)),
		"ConnectionType": reflect.ValueOf((*proto.ConnectionType)(nil)),
		"Verdict":        reflect.ValueOf((*proto.Verdict)(nil)),
	}
}
